namespace InfiniTDFb;

struct FpCellPosFb {
  row:float;
  col:float;
}

enum ObjectTypeFb:byte { ENEMY=0, PROJECTILE }

table MoveEventFb {
  obj_type:ObjectTypeFb;
  id:int;
  config_id:ushort;
  start_pos:FpCellPosFb (native_inline);
  dest_pos:FpCellPosFb (native_inline);
  start_time:float;
  end_time:float;
}

table DeleteEventFb {
  obj_type:ObjectTypeFb;
  id:int;
  start_time:float;
}

table DamageEventFb {
  id:int;
  start_time:float;
  health:float;
}

union BattleEventUnionFb {
  Move:MoveEventFb,
  Delete:DeleteEventFb,
  Damage:DamageEventFb
}

table BattleEventFb {
  event:BattleEventUnionFb;
}

table BattleEventsFb {
  events:[BattleEventFb];
}

struct MonsterDefeatedFb {
  config_id:ushort;
  num_sent:ushort;
  num_defeated:ushort;
}

table MonstersDefeatedFb {
  monsters_defeated:[MonsterDefeatedFb];
}

table BattleCalcResultsFb {
  error:string;
  monsters_defeated:MonstersDefeatedFb;
  events:[ubyte] (nested_flatbuffer: "BattleEventsFb");
  time_secs:float;
}

table BattleResultsFb {
  monsters_defeated:MonstersDefeatedFb;
  bonuses:[ushort];
  reward:float;
  time_secs:float;
}

table BattleFb {
  name:string;
  events:[ubyte] (nested_flatbuffer: "BattleEventsFb");
  results:[ubyte] (nested_flatbuffer: "BattleResultsFb");
}
