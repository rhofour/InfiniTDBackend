# Podman vs. Docker
I personally use podman, but I believe you can simply replace podman with docker
and everything will work as expected.

# Build
podman build -t infinitd-backend .

# Volume Setup
## Game Data Volume
In order to run correctly the server needs a privateFirebaseKey.json
file.

First, create a Firebase project and download this file.
Next, create a named volume with this file. Here's an easy way
to do that:
podman volume create backend-data
podman container create --name temp --mount type=volume,source=backend-data,target=/InfiniTDServer/data hello-world
podman cp ./privateFirebaseKey.json temp:/InfiniTDServer/data/
podman rm temp

## Lets Encrypt keys volume
I use [https://letsencrypt.org/](Let's Encrypt) for my SSL certificate, but other providers should work.

Similar to the Firebase private key we'll create a new named volume and copy the necessary files.
However, this time the files need to be in a specific directory structure which matches the name
of your domain (either localhost or infinitd.rofer.me in my case).
mkdir live
mkdir live/<YOUR DOMAIN>
cp privkey.pem fullchain.pem live/<YOUR DOMAIN>
podman volume create letsencrypt
podman container create --name temp --mount type=volume,source=letsencrypt,target=/etc/letsencrypt hello-world
podman cp ./live temp:/etc/letsencrypt/
podman rm temp

# Run
podman run --mount type=volume,source=backend-data,target=/InfiniTDServer/data --mount type=volume,source=letsencrypt,target=/etc/letsencrypt -p 8794:8794 --env DOMAIN=<YOUR DOMAIN> -d infinitd-backend

# Inspect DB / Logs
This will drop you in an SQLite terminal:
podman run --mount type=volume,source=backend-data,target=/InfiniTDServer/data --rm -it keinos/sqlite3

Then simply open the database with:
.open InfiniTDServer/data/data.db
